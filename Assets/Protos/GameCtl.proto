// # hello.proto
syntax = "proto3";
import "google/protobuf/empty.proto";
// import "google/api/annotations.proto";

package RoomStatus;
option csharp_namespace = "PlayCli.ProtoMod";
option go_package  = "proto";

message RoomListRequest{
    string requirement = 1;
}

message RoomListResponse {
    repeated Room result = 1;
}
message RoomCreateRequest {
    string HostId = 1;
}
message RoomRequest {
    string key = 1;
}
enum Status {
    ON_START = 0;
    ON_WAIT = 1 ;
    ON_HOST_TURN = 2;
    ON_DUEL_TURN = 3;
    ON_END = 4;
}
message Room {
    string key = 1;
    string host_id = 2; 
    string dueler_id = 3;
    Status status = 4;
    int32 round = 5;
    int32 cell = 6;
    repeated CellStatus cell_status = 7;
}

message CellStatus{
    string key = 1;
    int32 turn = 2; // turn 1 = host / -1 = duel
    int32 cell_num = 3;
}

service RoomStatus {
    rpc CreateRoom (RoomCreateRequest) returns (Room){ 
        // option (google.api.http) = {
        //     post: "/v1/room/create"
        //     body: "*"
        // };  
    };
    rpc GetRoomList(RoomListRequest) returns (RoomListResponse){ 
        // option (google.api.http) = {
        //     post: "/v1/room/list"
        //     body: "*"
        // }; 
    }; 
    rpc GetRoomInfo (RoomRequest) returns (Room){ 
        // option (google.api.http) = {
        //     post: "/v1/room/info"
        //     body: "*"
        // }; 
    };
    rpc DeleteRoom (RoomRequest) returns (google.protobuf.Empty){
        // option (google.api.http) = {
        //     post: "/v1/room/delete"
        //     body: "*"
        // }; 
    };

    // rpc GetRoomStream (RoomRequest) returns (stream CellStatus){
    //     option (google.api.http) = {
    //         post: "/v1/room/stream"
    //         body: "*"
    //     }; 
    // };
    // rpc UpdateRoomStream(stream CellStatus) returns  (stream CellStatus){
    //     option (google.api.http) = {
    //         post: "/v1/room/stream/update"
    //         body: "*"
    //     }; 
    // };
    rpc UpdateRoom( CellStatus) returns (CellStatus){
        // option (google.api.http) = {
        //     post: "/v1/room/update"
        //     body: "*"
        // }; 
    };
    
    rpc QuitRoom(RoomCreateRequest) returns(google.protobuf.Empty){
        //  option (google.api.http) = {
        //     post: "/v1/room/quit"
        //     body: "*"
        // }; 
    }}

message CreateCredReq {
    string Ip =1;
    string Username = 2;
    string Password =3;
}

message Cred{
    string file = 1;
}

service CreditsAuth {
    rpc CreateCred (CreateCredReq) returns (stream Cred) {
        //  option (google.api.http) = {
        //     post: "/v1/cred/create"
        //     body: "*"
        // };  
    } 
}